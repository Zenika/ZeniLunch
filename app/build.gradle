plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id "io.gitlab.arturbosch.detekt" version "1.22.0"
}

android {
    namespace 'com.zenika.zenilunch'
    compileSdk 33

    defaultConfig {
        applicationId "com.zenika.zenilunch"
        minSdk 21
        targetSdk 33
        versionCode 8
        versionName "1.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        create("release") {
            storeFile = file("debug-key.keystore")
            storePassword = "zenika"
            keyAlias = "alias"
            keyPassword = "zenika"
        }
    }

    buildTypes {
        debug {  
            debuggable true  
        } 
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "version"
    productFlavors {  
        create("alpha") {  
            dimension = "version"  
        }
        create("prod") {  
            dimension = "version" 
        }  
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

ksp {
    arg("room.schemaLocation", "$projectDir/schemas")
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
    config = files("$projectDir/config/detekt.yml")
    baseline = file("$projectDir/config/baseline.xml")
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")

    def composeBom = platform("androidx.compose:compose-bom:2023.01.00")
    implementation(composeBom)
    androidTestImplementation(composeBom)
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.foundation:foundation")
    implementation("androidx.activity:activity-compose:1.7.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")

    def nav_version = "2.6.0-beta01"
    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.30.1"

    def hilt_version = "2.45"
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    implementation "com.squareup.moshi:moshi:1.14.0"
    ksp("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")

    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    implementation "io.coil-kt:coil-compose:2.3.0"

    detektPlugins "com.twitter.compose.rules:detekt:0.0.26"

    def mockkVersion = "1.13.5"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "junit:junit:4.13.2"

    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation platform("androidx.compose:compose-bom:2022.10.00")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
}

apply from: rootDir.path + "/scripts/setupGitHooks.gradle"
